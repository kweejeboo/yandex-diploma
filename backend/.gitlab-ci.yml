
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
include:
  - project: templates/ci
    file: DockerInDockerTemplate.yml

stages:
  - build
  - test
  - release
variables:
  REPO_NAME: gitlab.praktikum-services.ru/std-013-60/momo-store
build-backend-code-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "$DOCKERHUB_TOKEN" | docker login --username $DOCKERHUB_LOGIN --password-stdin
  script:
    - cd backend
    - >
      docker build --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA . 
    - docker push $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA

unit-test-backend:
  stage: test
  image: golang:1.9
  script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go test -v .
  needs:
    - build-backend-code-job
   
upload-backend-release:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
      $CI_REGISTRY_IMAGE/momo-backend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-backend:latest
  needs:
    - unit-test-backend

